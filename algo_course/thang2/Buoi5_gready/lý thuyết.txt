Greedy
AC6 (Autumn Contest 2019)

Có N viên kẹo, viên kẹo thứ i có màu c[i] và có độ ngon là d[i]. Ta sẽ chia những viên keo này cho K đứa trẻ. Biết rằng mỗi đứa trẻ sẽ được nhận 2 viên, và mỗi đứa trẻ
sẽ chỉ vui nếu 2 viên kẹo chúng nhận là 2 viên khác mau nhau

Hỏi: Có tồn tại ra cách để chia được 2 * K viên kẹo cho K đứa nhỏ hay không ? Neu có, tổng độ ngon lớn nhat là bao nhiêu ??????

n=8 k=3
1 21   x
2 17   
5 15
3 10
1 6    x
2 3
1 3    x
1 1

Đứa 1:

<1, 21>, <2, 17>

Đứa 2:

<5, 15>, <3, 10>

Đứa 3:

<3, 9>, <1, 6>


nhận xét: khi ta có 2*k viên kẹo, để có thể chia cho mỗi đứa 2 viên thì số lượng kẹo mỗi màu <=k
gọi count[c] với ý nghĩa số lượng kẹo  có màu là c 
-----------
friend and restaurant
/*
6
8 3 9 2 4 5
5 3 1 4 5 10

tìm xem có boa nhiêu nhóm thỏa mãn: (x[i]+x[j]+...)<=y[i]+y[j]+y[k]
=> (y[i]-x[i])+(y[j]-x[j])+...>=0
đặt dãy b: b[i]=y[i]-x[i];
b: -3, 0, -8, 2,1,5
sắp xếp lại dãy b: -8, -3, 0, 1, 2,5
nhận xét: 1 nhóm chỉ cần 2 người vì nếu nhóm 3 người có thể loại người với bi nhỏ nhất mà kết quả không đổi
two point;
l=1,r=n,group=0;
while(l<r){
    nếu b[r]+b[l]>=0 thì group++
        l++,r++;
    nếu không l++;
}
-----------------
Shortest Subsequence
DNA gồm: A, C, G, T.
input: ACGTACGT
outut: đoạn ngắn nhất k phải chuỗi con của input

nhận xét: ACGTACGT thì từ đầu tiên nên là T vì loại đc nhiều từ nhất
lưu vị trí của từng từ trong dãy:
A: 1 4
C: 2 6 
G: 3 7
T: 4 8

ans
while(a,c,g,t không rỗng){
    max(a,c,g,t ở first)
    ans+=str[4]
    remove first của a,c,g,t đến khi > hơn max
}
if(a rỗng ans+="a")
else if(c rỗng ans+="c")
else if(g rỗng ans+="g")
else if(t rỗng ans+="t")
cout<<ans
 
lưu trữ dùng deque: vào trc ra trc