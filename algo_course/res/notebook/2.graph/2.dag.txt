int trace[100005], state[100005];
bool haveCircle = false;

void dfs_dag(int u)
{
    state[u] = 1;
    for (int v : adj[u])
    {
        if (state[v] == 0)
        {
            trace[v] = u;
            dfs_dag(v);
        }
        else if (state[v] == 1)
        {
            print(u, v);
            haveCircle = true;
            exit(0);
        }
    }
    state[u] = 2;
}

void print(int start, int end)
{
    vector<int> ans;
    ans.push_back(end);
    for (int cur = start; cur != end; cur = trace[cur])
        ans.push_back(cur);
    ans.push_back(end);
    cout << ans.size() << endl;
    reverse(ans.begin(), ans.end());
    for (auto i : ans)
        cout << i << ' ';
}