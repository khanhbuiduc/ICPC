// Addition
ll addMod(ll a, ll b) {
    return (a % M + b % M) % M;
}

// Subtraction
ll subMod(ll a, ll b) {
    return (a % M - b % M + M) % M;
}

// Multiplication
ll mulMod(ll a, ll b) {
    return (a % M) * (b % M) % M;
}

// Division (when M is prime)
ll Division(ll a, ll b) {
    return mulMod(a, powMod(b, M-2));
}

// Exponentiation: use powMod function
ll powMod(ll a, ll b) {
    ll res = 1;
    while (b > 0) {
        if (b & 1)
            (res *= a) %= M;
        (a *= a) %= M;
        b >>= 1;
    }
    return res;
}